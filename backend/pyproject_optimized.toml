[project]
name = "mnemosine-backend"
version = "0.1.0"
description = "AI-powered backend with optimized performance"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    # Core web framework
    "fastapi>=0.115.14",
    "uvicorn[standard]>=0.35.0",
    
    # Database (async optimized)
    "sqlalchemy[asyncio]>=2.0.0",
    "asyncpg>=0.29.0",
    "alembic>=1.16.2",
    
    # Data validation and settings
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "pydantic-ai>=0.3.5",
    
    # Security
    "passlib[bcrypt]>=1.7.4",
    "python-jose[cryptography]>=3.5.0",
    "python-multipart>=0.0.20",
    
    # HTTP client
    "httpx>=0.28.1",
    
    # Environment and configuration
    "python-dotenv>=1.1.1",
    
    # Rate limiting (lightweight)
    "slowapi>=0.1.9",
    
    # Observability (optional)
    "logfire>=3.22.0",
    
    # CLI tools
    "typer>=0.16.0",
    
    # Template rendering
    "jinja2>=3.1.6",
]

[project.optional-dependencies]
dev = [
    "black>=25.1.0",
    "isort>=6.0.1",
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "types-passlib>=1.7.7.20250602",
    "types-python-jose>=3.5.0.20250531",
]

redis = [
    "redis>=5.0.0",
]

monitoring = [
    "prometheus-client>=0.19.0",
    "psutil>=5.9.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.uv]
dev-dependencies = [
    "black>=25.1.0",
    "isort>=6.0.1",
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "types-passlib>=1.7.7.20250602",
    "types-python-jose>=3.5.0.20250531",
]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
]

[tool.hatch.build.targets.wheel]
packages = ["app"]

# Performance optimizations
[tool.hatch.build.targets.wheel.shared-data]
"scripts" = "scripts"

[tool.hatch.envs.default]
dependencies = [
    "coverage[toml]>=6.5",
    "pytest",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
    "- coverage combine",
    "coverage report",
]
cov = [
    "test-cov",
    "cov-report",
]

[tool.coverage.run]
source_pkgs = ["app"]
branch = true
parallel = true
omit = [
    "app/__init__.py",
]

[tool.coverage.paths]
mnemosine_backend = ["app", "*/mnemosine-backend/app"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]